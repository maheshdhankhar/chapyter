import pygame
import random

# Initialize Pygame
pygame.init()

# Set up display
SCREEN_WIDTH, SCREEN_HEIGHT = 800, 600
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption('Fighting Game')

# Colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
BLUE = (0, 0, 255)

# Player class
class Player(pygame.sprite.Sprite):
    def __init__(self, color, x, y):
        super().__init__()
        self.image = pygame.Surface((50, 60))  # player size
        self.image.fill(color)
        self.rect = self.image.get_rect()
        self.rect.center = (x, y)
        self.health = 100
        self.speed = 5
        self.facing_left = False
        self.velocity = pygame.Vector2(0, 0)

    def update(self):
        keys = pygame.key.get_pressed()

        # Movement
        if self.facing_left:
            if keys[pygame.K_LEFT]:
                self.rect.x -= self.speed
            if keys[pygame.K_RIGHT]:
                self.rect.x += self.speed
        else:
            if keys[pygame.K_LEFT]:
                self.rect.x -= self.speed
            if keys[pygame.K_RIGHT]:
                self.rect.x += self.speed
        
        if keys[pygame.K_UP]:
            self.rect.y -= self.speed
        if keys[pygame.K_DOWN]:
            self.rect.y += self.speed

        # Prevent going off screen
        self.rect.x = max(0, min(SCREEN_WIDTH - self.rect.width, self.rect.x))
        self.rect.y = max(0, min(SCREEN_HEIGHT - self.rect.height, self.rect.y))

    def draw_health(self):
        pygame.draw.rect(screen, RED, (self.rect.x, self.rect.y - 10, 50, 5))
        pygame.draw.rect(screen, GREEN, (self.rect.x, self.rect.y - 10, self.health * 0.5, 5))

    def hit(self, damage):
        self.health -= damage
        if self.health < 0:
            self.health = 0


# Main game loop
def game_loop():
    clock = pygame.time.Clock()

    # Player setup
    player1 = Player(RED, 150, SCREEN_HEIGHT - 80)
    player2 = Player(BLUE, 650, SCREEN_HEIGHT - 80)

    all_sprites = pygame.sprite.Group()
    all_sprites.add(player1, player2)

    running = True
    while running:
        screen.fill(WHITE)

        # Event handling
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

        # Update players
        all_sprites.update()

        # Detect collisions (simple)
        if player1.rect.colliderect(player2.rect):
            if pygame.key.get_pressed()[pygame.K_SPACE]:  # Attack with spacebar
                player2.hit(10)
            if pygame.key.get_pressed()[pygame.K_RETURN]:  # Attack with enter
                player1.hit(10)

        # Draw health bars
        player1.draw_health()
        player2.draw_health()

        # Draw all sprites (players)
        all_sprites.draw(screen)

        pygame.display.flip()
        clock.tick(60)

    pygame.quit()

# Run the game
game_loop()
